@page "/"
@using HotelAirportService.WebApplication.Models
@using HotelAirportService.WebApplication.Service

@inject LoginService LoginService
@inject NotificationService NotificationService

<PageTitle>Neue Buchung</PageTitle>

<h1>Guten Tag!</h1>
<h3>Willkommen beim Hotel Airport Service.</h3>

@if (!LoginService.IsLoggedIn)
{
<p>Um eine Fahrt zu buchen geben Sie bitte ihre Buchungsnummer an</p>
    <div class="d-flex flex-column align-items-center justify-content-center">
        <EditForm class="mt-8" Model="@enterBookingCodeModel" OnValidSubmit="@SubmitBookingCodeAsync">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="container-fluid">
                <div class="row">
                    <div class="input-group input-group-sm mb-3">
                        <span class="input-group-text" id="booking-code">Buchungscode</span>
                        <InputText class="form-control" placeholder="Buchungscode" @bind-Value="enterBookingCodeModel.BookingCode" />
                    </div>

                    <div class="input-group input-group-sm mb-3">
                        <button class="btn btn-secondary form-control" type="submit">
                            Bestätigen
                        </button>
                    </div>
                </div>
            </div>
        </EditForm>
    </div>
}
else
{
    <div class="card">
        <div class="card-body">
            <div class="container-fluid">
                <div class="d-flex flex-column">
                    <div class="d-flex flex-row align-items-center justify-content-center">
                        <h5 class="card-title">@LoginService.Booking.Customer.CustomerName @LoginService.Booking.BookingCode</h5>
                        <h2 class="ml-3">@LoginService.Booking.RoomNumber</h2>
                    </div>
                </div>
                <div class="d-flex flex-column">
                    <div class="d-flex flex-row align-items-center justify-content-around">
                        <h5>Check In:<span class="badge badge-secondary ml-3">@LoginService.Booking.CheckIn.ToShortDateString()</span></h5>
                        <h5>Check Out:<span class="badge badge-secondary ml-3">@LoginService.Booking.CheckOut.ToShortDateString()</span></h5>

                    </div>
                    <div class="d-flex flex-row align-items-center justify-content-around">
                        <h5>Ankunft:<span class="badge badge-secondary ml-3">@LoginService.Booking.Arrival.ToShortDateString()</span></h5>
                        <h5>Abfahrt:<span class="badge badge-secondary ml-3">@LoginService.Booking.Departure.ToShortDateString()</span></h5>
                    </div>
                </div>
            </div>
            <button class="btn btn-primary mt-3" onclick="@logout">Ausloggen</button>
        </div>
    </div>
}
@code
{
    private EnterBookingCodeModel enterBookingCodeModel = new();

    private async Task SubmitBookingCodeAsync()
    {
        bool res = await LoginService.LoginCustomerAsync(enterBookingCodeModel.BookingCode);
        if (res)
        {
            NotificationService.Notify(NotificationSeverity.Success, "Erfolgreich", " Sie können nun Transfers buchen.");
            StateHasChanged();
        }
        else
        {
            NotificationService.Notify(NotificationSeverity.Error, "Fehler", "Diese Buchungsnummer existiert nicht.");
        }
        enterBookingCodeModel = new();
    }

    private void logout()
    {
        LoginService.LogoutCustomer();
    }
}
